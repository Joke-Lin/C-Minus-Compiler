< "
" , BLANK >
< "}" , SPECIAL_SYMBOL >
< "
" , BLANK >
< ";" , SPECIAL_SYMBOL >
< ")" , SPECIAL_SYMBOL >
< "2" , NUM >
< "," , SPECIAL_SYMBOL >
< "1" , NUM >
< "(" , SPECIAL_SYMBOL >
< "gcd" , ID >
< " " , BLANK >
< "return" , RESERVED_WORD >
< "
	" , BLANK >
< ";" , SPECIAL_SYMBOL >
< ")" , SPECIAL_SYMBOL >
< "b" , ID >
< "(" , SPECIAL_SYMBOL >
< "printf" , ID >
< "
	" , BLANK >
< ";" , SPECIAL_SYMBOL >
< "2" , NUM >
< "/" , SPECIAL_SYMBOL >
< ")" , SPECIAL_SYMBOL >
< "4" , NUM >
< "+" , SPECIAL_SYMBOL >
< "a" , ID >
< "(" , SPECIAL_SYMBOL >
< " " , BLANK >
< "=" , SPECIAL_SYMBOL >
< " " , BLANK >
< "b" , ID >
< "
	" , BLANK >
< ";" , SPECIAL_SYMBOL >
< "3" , NUM >
< " " , BLANK >
< "=" , SPECIAL_SYMBOL >
< " " , BLANK >
< "a" , ID >
< "
	" , BLANK >
< ";" , SPECIAL_SYMBOL >
< "b" , ID >
< " " , BLANK >
< "int" , RESERVED_WORD >
< "
	" , BLANK >
< ";" , SPECIAL_SYMBOL >
< "a" , ID >
< " " , BLANK >
< "int" , RESERVED_WORD >
< "
	" , BLANK >
< "{" , SPECIAL_SYMBOL >
< " " , BLANK >
< ")" , SPECIAL_SYMBOL >
< "args" , ID >
< " " , BLANK >
< "int" , RESERVED_WORD >
< "(" , SPECIAL_SYMBOL >
< "main" , ID >
< " " , BLANK >
< "int" , RESERVED_WORD >
program:
follow:

进入产生式: program:declaration-list ;

待匹配: declaration-list 

declaration-list:
follow:

进入产生式: declaration-list:declaration declaration-list` ;

待匹配: declaration declaration-list` 

declaration:
follow:
declaration-list` 
进入产生式: declaration:type-specifier ID declaration` ;

待匹配: type-specifier ID declaration` declaration-list` 

type-specifier:
follow:
ID declaration` declaration-list` 
进入产生式: type-specifier:int ;void ;

待匹配: int ID declaration` declaration-list` 

匹配:int
匹配:main
declaration`:
follow:
declaration-list` 
进入产生式: declaration`:var-declaration` ;( parmas ) compound-stmt ;

待匹配: var-declaration` declaration-list` 

var-declaration`:
follow:
declaration-list` 
进入产生式: var-declaration`:[ NUM ] ; ;; ;

待匹配: [ NUM ] ; declaration-list` 

待匹配: ; declaration-list` 

待匹配: ( parmas ) compound-stmt declaration-list` 

匹配:(
parmas:
follow:
) compound-stmt declaration-list` 
进入产生式: parmas:int ID parma` parma-list` ;void parmas` ;

待匹配: int ID parma` parma-list` ) compound-stmt declaration-list` 

匹配:int
匹配:args
parma`:
follow:
parma-list` ) compound-stmt declaration-list` 
进入产生式: parma`:[ ] ;epsilon ;

待匹配: [ ] parma-list` ) compound-stmt declaration-list` 

待匹配: epsilon parma-list` ) compound-stmt declaration-list` 

parma`: empty
parma-list`:
follow:
) compound-stmt declaration-list` 
进入产生式: parma-list`:, parma parma-list` ;epsilon ;

待匹配: , parma parma-list` ) compound-stmt declaration-list` 

待匹配: epsilon ) compound-stmt declaration-list` 

parma-list`: empty
匹配:)
compound-stmt:
follow:
declaration-list` 
进入产生式: compound-stmt:{ local-declarations statement-list } ;

待匹配: { local-declarations statement-list } declaration-list` 

匹配:{
local-declarations:
follow:
statement-list } declaration-list` 
进入产生式: local-declarations:local-declarations` ;

待匹配: local-declarations` statement-list } declaration-list` 

local-declarations`:
follow:
statement-list } declaration-list` 
进入产生式: local-declarations`:var-declaration local-declarations` ;epsilon ;

待匹配: var-declaration local-declarations` statement-list } declaration-list` 

var-declaration:
follow:
local-declarations` statement-list } declaration-list` 
进入产生式: var-declaration:type-specifier ID var-declaration` ;

待匹配: type-specifier ID var-declaration` local-declarations` statement-list } declaration-list` 

type-specifier:
follow:
ID var-declaration` local-declarations` statement-list } declaration-list` 
进入产生式: type-specifier:int ;void ;

待匹配: int ID var-declaration` local-declarations` statement-list } declaration-list` 

匹配:int
匹配:a
var-declaration`:
follow:
local-declarations` statement-list } declaration-list` 
进入产生式: var-declaration`:[ NUM ] ; ;; ;

待匹配: [ NUM ] ; local-declarations` statement-list } declaration-list` 

待匹配: ; local-declarations` statement-list } declaration-list` 

匹配:;
local-declarations`:
follow:
statement-list } declaration-list` 
进入产生式: local-declarations`:var-declaration local-declarations` ;epsilon ;

待匹配: var-declaration local-declarations` statement-list } declaration-list` 

var-declaration:
follow:
local-declarations` statement-list } declaration-list` 
进入产生式: var-declaration:type-specifier ID var-declaration` ;

待匹配: type-specifier ID var-declaration` local-declarations` statement-list } declaration-list` 

type-specifier:
follow:
ID var-declaration` local-declarations` statement-list } declaration-list` 
进入产生式: type-specifier:int ;void ;

待匹配: int ID var-declaration` local-declarations` statement-list } declaration-list` 

匹配:int
匹配:b
var-declaration`:
follow:
local-declarations` statement-list } declaration-list` 
进入产生式: var-declaration`:[ NUM ] ; ;; ;

待匹配: [ NUM ] ; local-declarations` statement-list } declaration-list` 

待匹配: ; local-declarations` statement-list } declaration-list` 

匹配:;
local-declarations`:
follow:
statement-list } declaration-list` 
进入产生式: local-declarations`:var-declaration local-declarations` ;epsilon ;

待匹配: var-declaration local-declarations` statement-list } declaration-list` 

var-declaration:
follow:
local-declarations` statement-list } declaration-list` 
进入产生式: var-declaration:type-specifier ID var-declaration` ;

待匹配: type-specifier ID var-declaration` local-declarations` statement-list } declaration-list` 

type-specifier:
follow:
ID var-declaration` local-declarations` statement-list } declaration-list` 
进入产生式: type-specifier:int ;void ;

待匹配: int ID var-declaration` local-declarations` statement-list } declaration-list` 

待匹配: void ID var-declaration` local-declarations` statement-list } declaration-list` 

待匹配: epsilon statement-list } declaration-list` 

local-declarations`: empty
statement-list:
follow:
} declaration-list` 
进入产生式: statement-list:statement-list` ;

待匹配: statement-list` } declaration-list` 

statement-list`:
follow:
} declaration-list` 
进入产生式: statement-list`:statement statement-list` ;epsilon ;

待匹配: statement statement-list` } declaration-list` 

statement:
follow:
statement-list` } declaration-list` 
进入产生式: statement:expression-stmt ;compound-stmt ;selection-stmt ;iteration-stmt ;return-stmt ;

待匹配: expression-stmt statement-list` } declaration-list` 

expression-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: expression-stmt:expression ; ;; ;

待匹配: expression ; statement-list` } declaration-list` 

expression:
follow:
; statement-list` } declaration-list` 
进入产生式: expression:( expression ) term` additive-expression` simple-expression` ;NUM term` additive-expression` simple-expression` ;ID expression` ;

待匹配: ( expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: NUM term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: ID expression` ; statement-list` } declaration-list` 

匹配:a
expression`:
follow:
; statement-list` } declaration-list` 
进入产生式: expression`:var` expression`` ;( args ) term` additive-expression` simple-expression` ;

待匹配: var` expression`` ; statement-list` } declaration-list` 

var`:
follow:
expression`` ; statement-list` } declaration-list` 
进入产生式: var`:[ expression ] ;epsilon ;

待匹配: [ expression ] expression`` ; statement-list` } declaration-list` 

待匹配: epsilon expression`` ; statement-list` } declaration-list` 

var`: empty
expression``:
follow:
; statement-list` } declaration-list` 
进入产生式: expression``:term` additive-expression` simple-expression` ;= expression ;

待匹配: term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`:
follow:
additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: term`:mulop factor term` ;epsilon ;

待匹配: mulop factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

mulop:
follow:
factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: mulop:* ;/ ;

待匹配: * factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: / factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`: empty
additive-expression`:
follow:
simple-expression` ; statement-list` } declaration-list` 
进入产生式: additive-expression`:addop term additive-expression` ;epsilon ;

待匹配: addop term additive-expression` simple-expression` ; statement-list` } declaration-list` 

addop:
follow:
term additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: addop:+ ;- ;

待匹配: + term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: - term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon simple-expression` ; statement-list` } declaration-list` 

additive-expression`: empty
simple-expression`:
follow:
; statement-list` } declaration-list` 
进入产生式: simple-expression`:relop additive-expression ;epsilon ;

待匹配: relop additive-expression ; statement-list` } declaration-list` 

relop:
follow:
additive-expression ; statement-list` } declaration-list` 
进入产生式: relop:<= < > >= == != ;

待匹配: <= < > >= == != additive-expression ; statement-list` } declaration-list` 

待匹配: epsilon ; statement-list` } declaration-list` 

simple-expression`: empty
待匹配: = expression ; statement-list` } declaration-list` 

匹配:=
expression:
follow:
; statement-list` } declaration-list` 
进入产生式: expression:( expression ) term` additive-expression` simple-expression` ;NUM term` additive-expression` simple-expression` ;ID expression` ;

待匹配: ( expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: NUM term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配:3
term`:
follow:
additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: term`:mulop factor term` ;epsilon ;

待匹配: mulop factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

mulop:
follow:
factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: mulop:* ;/ ;

待匹配: * factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: / factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`: empty
additive-expression`:
follow:
simple-expression` ; statement-list` } declaration-list` 
进入产生式: additive-expression`:addop term additive-expression` ;epsilon ;

待匹配: addop term additive-expression` simple-expression` ; statement-list` } declaration-list` 

addop:
follow:
term additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: addop:+ ;- ;

待匹配: + term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: - term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon simple-expression` ; statement-list` } declaration-list` 

additive-expression`: empty
simple-expression`:
follow:
; statement-list` } declaration-list` 
进入产生式: simple-expression`:relop additive-expression ;epsilon ;

待匹配: relop additive-expression ; statement-list` } declaration-list` 

relop:
follow:
additive-expression ; statement-list` } declaration-list` 
进入产生式: relop:<= < > >= == != ;

待匹配: <= < > >= == != additive-expression ; statement-list` } declaration-list` 

待匹配: epsilon ; statement-list` } declaration-list` 

simple-expression`: empty
匹配:;
statement-list`:
follow:
} declaration-list` 
进入产生式: statement-list`:statement statement-list` ;epsilon ;

待匹配: statement statement-list` } declaration-list` 

statement:
follow:
statement-list` } declaration-list` 
进入产生式: statement:expression-stmt ;compound-stmt ;selection-stmt ;iteration-stmt ;return-stmt ;

待匹配: expression-stmt statement-list` } declaration-list` 

expression-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: expression-stmt:expression ; ;; ;

待匹配: expression ; statement-list` } declaration-list` 

expression:
follow:
; statement-list` } declaration-list` 
进入产生式: expression:( expression ) term` additive-expression` simple-expression` ;NUM term` additive-expression` simple-expression` ;ID expression` ;

待匹配: ( expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: NUM term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: ID expression` ; statement-list` } declaration-list` 

匹配:b
expression`:
follow:
; statement-list` } declaration-list` 
进入产生式: expression`:var` expression`` ;( args ) term` additive-expression` simple-expression` ;

待匹配: var` expression`` ; statement-list` } declaration-list` 

var`:
follow:
expression`` ; statement-list` } declaration-list` 
进入产生式: var`:[ expression ] ;epsilon ;

待匹配: [ expression ] expression`` ; statement-list` } declaration-list` 

待匹配: epsilon expression`` ; statement-list` } declaration-list` 

var`: empty
expression``:
follow:
; statement-list` } declaration-list` 
进入产生式: expression``:term` additive-expression` simple-expression` ;= expression ;

待匹配: term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`:
follow:
additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: term`:mulop factor term` ;epsilon ;

待匹配: mulop factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

mulop:
follow:
factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: mulop:* ;/ ;

待匹配: * factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: / factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`: empty
additive-expression`:
follow:
simple-expression` ; statement-list` } declaration-list` 
进入产生式: additive-expression`:addop term additive-expression` ;epsilon ;

待匹配: addop term additive-expression` simple-expression` ; statement-list` } declaration-list` 

addop:
follow:
term additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: addop:+ ;- ;

待匹配: + term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: - term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon simple-expression` ; statement-list` } declaration-list` 

additive-expression`: empty
simple-expression`:
follow:
; statement-list` } declaration-list` 
进入产生式: simple-expression`:relop additive-expression ;epsilon ;

待匹配: relop additive-expression ; statement-list` } declaration-list` 

relop:
follow:
additive-expression ; statement-list` } declaration-list` 
进入产生式: relop:<= < > >= == != ;

待匹配: <= < > >= == != additive-expression ; statement-list` } declaration-list` 

待匹配: epsilon ; statement-list` } declaration-list` 

simple-expression`: empty
待匹配: = expression ; statement-list` } declaration-list` 

匹配:=
expression:
follow:
; statement-list` } declaration-list` 
进入产生式: expression:( expression ) term` additive-expression` simple-expression` ;NUM term` additive-expression` simple-expression` ;ID expression` ;

待匹配: ( expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配:(
expression:
follow:
) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: expression:( expression ) term` additive-expression` simple-expression` ;NUM term` additive-expression` simple-expression` ;ID expression` ;

待匹配: ( expression ) term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: NUM term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: ID expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配:a
expression`:
follow:
) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: expression`:var` expression`` ;( args ) term` additive-expression` simple-expression` ;

待匹配: var` expression`` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

var`:
follow:
expression`` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: var`:[ expression ] ;epsilon ;

待匹配: [ expression ] expression`` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon expression`` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

var`: empty
expression``:
follow:
) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: expression``:term` additive-expression` simple-expression` ;= expression ;

待匹配: term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`:
follow:
additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: term`:mulop factor term` ;epsilon ;

待匹配: mulop factor term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

mulop:
follow:
factor term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: mulop:* ;/ ;

待匹配: * factor term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: / factor term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`: empty
additive-expression`:
follow:
simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: additive-expression`:addop term additive-expression` ;epsilon ;

待匹配: addop term additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

addop:
follow:
term additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: addop:+ ;- ;

待匹配: + term additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配:+
term:
follow:
additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: term:factor term` ;

待匹配: factor term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

factor:
follow:
term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: factor:( expression ) ;ID factor` ;NUM ;

待匹配: ( expression ) term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: ID factor` term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: NUM term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配:4
term`:
follow:
additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: term`:mulop factor term` ;epsilon ;

待匹配: mulop factor term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

mulop:
follow:
factor term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: mulop:* ;/ ;

待匹配: * factor term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: / factor term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`: empty
additive-expression`:
follow:
simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: additive-expression`:addop term additive-expression` ;epsilon ;

待匹配: addop term additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

addop:
follow:
term additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: addop:+ ;- ;

待匹配: + term additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: - term additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

additive-expression`: empty
simple-expression`:
follow:
) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: simple-expression`:relop additive-expression ;epsilon ;

待匹配: relop additive-expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

relop:
follow:
additive-expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: relop:<= < > >= == != ;

待匹配: <= < > >= == != additive-expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

simple-expression`: empty
匹配:)
term`:
follow:
additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: term`:mulop factor term` ;epsilon ;

待匹配: mulop factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

mulop:
follow:
factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: mulop:* ;/ ;

待匹配: * factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: / factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配:/
factor:
follow:
term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: factor:( expression ) ;ID factor` ;NUM ;

待匹配: ( expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: ID factor` term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: NUM term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配:2
term`:
follow:
additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: term`:mulop factor term` ;epsilon ;

待匹配: mulop factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

mulop:
follow:
factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: mulop:* ;/ ;

待匹配: * factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: / factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`: empty
additive-expression`:
follow:
simple-expression` ; statement-list` } declaration-list` 
进入产生式: additive-expression`:addop term additive-expression` ;epsilon ;

待匹配: addop term additive-expression` simple-expression` ; statement-list` } declaration-list` 

addop:
follow:
term additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: addop:+ ;- ;

待匹配: + term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: - term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon simple-expression` ; statement-list` } declaration-list` 

additive-expression`: empty
simple-expression`:
follow:
; statement-list` } declaration-list` 
进入产生式: simple-expression`:relop additive-expression ;epsilon ;

待匹配: relop additive-expression ; statement-list` } declaration-list` 

relop:
follow:
additive-expression ; statement-list` } declaration-list` 
进入产生式: relop:<= < > >= == != ;

待匹配: <= < > >= == != additive-expression ; statement-list` } declaration-list` 

待匹配: epsilon ; statement-list` } declaration-list` 

simple-expression`: empty
匹配:;
statement-list`:
follow:
} declaration-list` 
进入产生式: statement-list`:statement statement-list` ;epsilon ;

待匹配: statement statement-list` } declaration-list` 

statement:
follow:
statement-list` } declaration-list` 
进入产生式: statement:expression-stmt ;compound-stmt ;selection-stmt ;iteration-stmt ;return-stmt ;

待匹配: expression-stmt statement-list` } declaration-list` 

expression-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: expression-stmt:expression ; ;; ;

待匹配: expression ; statement-list` } declaration-list` 

expression:
follow:
; statement-list` } declaration-list` 
进入产生式: expression:( expression ) term` additive-expression` simple-expression` ;NUM term` additive-expression` simple-expression` ;ID expression` ;

待匹配: ( expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: NUM term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: ID expression` ; statement-list` } declaration-list` 

匹配:printf
expression`:
follow:
; statement-list` } declaration-list` 
进入产生式: expression`:var` expression`` ;( args ) term` additive-expression` simple-expression` ;

待匹配: var` expression`` ; statement-list` } declaration-list` 

var`:
follow:
expression`` ; statement-list` } declaration-list` 
进入产生式: var`:[ expression ] ;epsilon ;

待匹配: [ expression ] expression`` ; statement-list` } declaration-list` 

待匹配: epsilon expression`` ; statement-list` } declaration-list` 

var`: empty
expression``:
follow:
; statement-list` } declaration-list` 
进入产生式: expression``:term` additive-expression` simple-expression` ;= expression ;

待匹配: term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`:
follow:
additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: term`:mulop factor term` ;epsilon ;

待匹配: mulop factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

mulop:
follow:
factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: mulop:* ;/ ;

待匹配: * factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: / factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`: empty
additive-expression`:
follow:
simple-expression` ; statement-list` } declaration-list` 
进入产生式: additive-expression`:addop term additive-expression` ;epsilon ;

待匹配: addop term additive-expression` simple-expression` ; statement-list` } declaration-list` 

addop:
follow:
term additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: addop:+ ;- ;

待匹配: + term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: - term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon simple-expression` ; statement-list` } declaration-list` 

additive-expression`: empty
simple-expression`:
follow:
; statement-list` } declaration-list` 
进入产生式: simple-expression`:relop additive-expression ;epsilon ;

待匹配: relop additive-expression ; statement-list` } declaration-list` 

relop:
follow:
additive-expression ; statement-list` } declaration-list` 
进入产生式: relop:<= < > >= == != ;

待匹配: <= < > >= == != additive-expression ; statement-list` } declaration-list` 

待匹配: epsilon ; statement-list` } declaration-list` 

simple-expression`: empty
待匹配: = expression ; statement-list` } declaration-list` 

待匹配: ( args ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配:(
args:
follow:
) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: args:arg-list ;epsilon ;

待匹配: arg-list ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

arg-list:
follow:
) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: arg-list:expression arg-list` ;

待匹配: expression arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

expression:
follow:
arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: expression:( expression ) term` additive-expression` simple-expression` ;NUM term` additive-expression` simple-expression` ;ID expression` ;

待匹配: ( expression ) term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: NUM term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: ID expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配:b
expression`:
follow:
arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: expression`:var` expression`` ;( args ) term` additive-expression` simple-expression` ;

待匹配: var` expression`` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

var`:
follow:
expression`` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: var`:[ expression ] ;epsilon ;

待匹配: [ expression ] expression`` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon expression`` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

var`: empty
expression``:
follow:
arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: expression``:term` additive-expression` simple-expression` ;= expression ;

待匹配: term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`:
follow:
additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: term`:mulop factor term` ;epsilon ;

待匹配: mulop factor term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

mulop:
follow:
factor term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: mulop:* ;/ ;

待匹配: * factor term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: / factor term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`: empty
additive-expression`:
follow:
simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: additive-expression`:addop term additive-expression` ;epsilon ;

待匹配: addop term additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

addop:
follow:
term additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: addop:+ ;- ;

待匹配: + term additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: - term additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

additive-expression`: empty
simple-expression`:
follow:
arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: simple-expression`:relop additive-expression ;epsilon ;

待匹配: relop additive-expression arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

relop:
follow:
additive-expression arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: relop:<= < > >= == != ;

待匹配: <= < > >= == != additive-expression arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

simple-expression`: empty
arg-list`:
follow:
) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: arg-list`:, expression arg-list` ;epsilon ;

待匹配: , expression arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

arg-list`: empty
匹配:)
term`:
follow:
additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: term`:mulop factor term` ;epsilon ;

待匹配: mulop factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

mulop:
follow:
factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: mulop:* ;/ ;

待匹配: * factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: / factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`: empty
additive-expression`:
follow:
simple-expression` ; statement-list` } declaration-list` 
进入产生式: additive-expression`:addop term additive-expression` ;epsilon ;

待匹配: addop term additive-expression` simple-expression` ; statement-list` } declaration-list` 

addop:
follow:
term additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: addop:+ ;- ;

待匹配: + term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: - term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon simple-expression` ; statement-list` } declaration-list` 

additive-expression`: empty
simple-expression`:
follow:
; statement-list` } declaration-list` 
进入产生式: simple-expression`:relop additive-expression ;epsilon ;

待匹配: relop additive-expression ; statement-list` } declaration-list` 

relop:
follow:
additive-expression ; statement-list` } declaration-list` 
进入产生式: relop:<= < > >= == != ;

待匹配: <= < > >= == != additive-expression ; statement-list` } declaration-list` 

待匹配: epsilon ; statement-list` } declaration-list` 

simple-expression`: empty
匹配:;
statement-list`:
follow:
} declaration-list` 
进入产生式: statement-list`:statement statement-list` ;epsilon ;

待匹配: statement statement-list` } declaration-list` 

statement:
follow:
statement-list` } declaration-list` 
进入产生式: statement:expression-stmt ;compound-stmt ;selection-stmt ;iteration-stmt ;return-stmt ;

待匹配: expression-stmt statement-list` } declaration-list` 

expression-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: expression-stmt:expression ; ;; ;

待匹配: expression ; statement-list` } declaration-list` 

expression:
follow:
; statement-list` } declaration-list` 
进入产生式: expression:( expression ) term` additive-expression` simple-expression` ;NUM term` additive-expression` simple-expression` ;ID expression` ;

待匹配: ( expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: NUM term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: ID expression` ; statement-list` } declaration-list` 

待匹配: ; statement-list` } declaration-list` 

待匹配: compound-stmt statement-list` } declaration-list` 

compound-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: compound-stmt:{ local-declarations statement-list } ;

待匹配: { local-declarations statement-list } statement-list` } declaration-list` 

待匹配: selection-stmt statement-list` } declaration-list` 

selection-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: selection-stmt:if ( expression statement other ;

待匹配: if ( expression statement other statement-list` } declaration-list` 

待匹配: iteration-stmt statement-list` } declaration-list` 

iteration-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: iteration-stmt:while ( expression ) statement ;

待匹配: while ( expression ) statement statement-list` } declaration-list` 

待匹配: return-stmt statement-list` } declaration-list` 

return-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: return-stmt:return return-stmt` ;

待匹配: return return-stmt` statement-list` } declaration-list` 

匹配:return
return-stmt`:
follow:
statement-list` } declaration-list` 
进入产生式: return-stmt`:; ;expression ; ;

待匹配: ; statement-list` } declaration-list` 

待匹配: expression ; statement-list` } declaration-list` 

expression:
follow:
; statement-list` } declaration-list` 
进入产生式: expression:( expression ) term` additive-expression` simple-expression` ;NUM term` additive-expression` simple-expression` ;ID expression` ;

待匹配: ( expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: NUM term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: ID expression` ; statement-list` } declaration-list` 

匹配:gcd
expression`:
follow:
; statement-list` } declaration-list` 
进入产生式: expression`:var` expression`` ;( args ) term` additive-expression` simple-expression` ;

待匹配: var` expression`` ; statement-list` } declaration-list` 

var`:
follow:
expression`` ; statement-list` } declaration-list` 
进入产生式: var`:[ expression ] ;epsilon ;

待匹配: [ expression ] expression`` ; statement-list` } declaration-list` 

待匹配: epsilon expression`` ; statement-list` } declaration-list` 

var`: empty
expression``:
follow:
; statement-list` } declaration-list` 
进入产生式: expression``:term` additive-expression` simple-expression` ;= expression ;

待匹配: term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`:
follow:
additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: term`:mulop factor term` ;epsilon ;

待匹配: mulop factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

mulop:
follow:
factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: mulop:* ;/ ;

待匹配: * factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: / factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`: empty
additive-expression`:
follow:
simple-expression` ; statement-list` } declaration-list` 
进入产生式: additive-expression`:addop term additive-expression` ;epsilon ;

待匹配: addop term additive-expression` simple-expression` ; statement-list` } declaration-list` 

addop:
follow:
term additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: addop:+ ;- ;

待匹配: + term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: - term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon simple-expression` ; statement-list` } declaration-list` 

additive-expression`: empty
simple-expression`:
follow:
; statement-list` } declaration-list` 
进入产生式: simple-expression`:relop additive-expression ;epsilon ;

待匹配: relop additive-expression ; statement-list` } declaration-list` 

relop:
follow:
additive-expression ; statement-list` } declaration-list` 
进入产生式: relop:<= < > >= == != ;

待匹配: <= < > >= == != additive-expression ; statement-list` } declaration-list` 

待匹配: epsilon ; statement-list` } declaration-list` 

simple-expression`: empty
待匹配: = expression ; statement-list` } declaration-list` 

待匹配: ( args ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配:(
args:
follow:
) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: args:arg-list ;epsilon ;

待匹配: arg-list ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

arg-list:
follow:
) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: arg-list:expression arg-list` ;

待匹配: expression arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

expression:
follow:
arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: expression:( expression ) term` additive-expression` simple-expression` ;NUM term` additive-expression` simple-expression` ;ID expression` ;

待匹配: ( expression ) term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: NUM term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配:1
term`:
follow:
additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: term`:mulop factor term` ;epsilon ;

待匹配: mulop factor term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

mulop:
follow:
factor term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: mulop:* ;/ ;

待匹配: * factor term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: / factor term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`: empty
additive-expression`:
follow:
simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: additive-expression`:addop term additive-expression` ;epsilon ;

待匹配: addop term additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

addop:
follow:
term additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: addop:+ ;- ;

待匹配: + term additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: - term additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

additive-expression`: empty
simple-expression`:
follow:
arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: simple-expression`:relop additive-expression ;epsilon ;

待匹配: relop additive-expression arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

relop:
follow:
additive-expression arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: relop:<= < > >= == != ;

待匹配: <= < > >= == != additive-expression arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

simple-expression`: empty
arg-list`:
follow:
) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: arg-list`:, expression arg-list` ;epsilon ;

待匹配: , expression arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配:,
expression:
follow:
arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: expression:( expression ) term` additive-expression` simple-expression` ;NUM term` additive-expression` simple-expression` ;ID expression` ;

待匹配: ( expression ) term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: NUM term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配:2
term`:
follow:
additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: term`:mulop factor term` ;epsilon ;

待匹配: mulop factor term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

mulop:
follow:
factor term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: mulop:* ;/ ;

待匹配: * factor term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: / factor term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`: empty
additive-expression`:
follow:
simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: additive-expression`:addop term additive-expression` ;epsilon ;

待匹配: addop term additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

addop:
follow:
term additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: addop:+ ;- ;

待匹配: + term additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: - term additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

additive-expression`: empty
simple-expression`:
follow:
arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: simple-expression`:relop additive-expression ;epsilon ;

待匹配: relop additive-expression arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

relop:
follow:
additive-expression arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: relop:<= < > >= == != ;

待匹配: <= < > >= == != additive-expression arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

simple-expression`: empty
arg-list`:
follow:
) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: arg-list`:, expression arg-list` ;epsilon ;

待匹配: , expression arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

arg-list`: empty
匹配:)
term`:
follow:
additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: term`:mulop factor term` ;epsilon ;

待匹配: mulop factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

mulop:
follow:
factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: mulop:* ;/ ;

待匹配: * factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: / factor term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`: empty
additive-expression`:
follow:
simple-expression` ; statement-list` } declaration-list` 
进入产生式: additive-expression`:addop term additive-expression` ;epsilon ;

待匹配: addop term additive-expression` simple-expression` ; statement-list` } declaration-list` 

addop:
follow:
term additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: addop:+ ;- ;

待匹配: + term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: - term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon simple-expression` ; statement-list` } declaration-list` 

additive-expression`: empty
simple-expression`:
follow:
; statement-list` } declaration-list` 
进入产生式: simple-expression`:relop additive-expression ;epsilon ;

待匹配: relop additive-expression ; statement-list` } declaration-list` 

relop:
follow:
additive-expression ; statement-list` } declaration-list` 
进入产生式: relop:<= < > >= == != ;

待匹配: <= < > >= == != additive-expression ; statement-list` } declaration-list` 

待匹配: epsilon ; statement-list` } declaration-list` 

simple-expression`: empty
匹配:;
statement-list`:
follow:
} declaration-list` 
进入产生式: statement-list`:statement statement-list` ;epsilon ;

待匹配: statement statement-list` } declaration-list` 

statement:
follow:
statement-list` } declaration-list` 
进入产生式: statement:expression-stmt ;compound-stmt ;selection-stmt ;iteration-stmt ;return-stmt ;

待匹配: expression-stmt statement-list` } declaration-list` 

expression-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: expression-stmt:expression ; ;; ;

待匹配: expression ; statement-list` } declaration-list` 

expression:
follow:
; statement-list` } declaration-list` 
进入产生式: expression:( expression ) term` additive-expression` simple-expression` ;NUM term` additive-expression` simple-expression` ;ID expression` ;

待匹配: ( expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: NUM term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: ID expression` ; statement-list` } declaration-list` 

待匹配: ; statement-list` } declaration-list` 

待匹配: compound-stmt statement-list` } declaration-list` 

compound-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: compound-stmt:{ local-declarations statement-list } ;

待匹配: { local-declarations statement-list } statement-list` } declaration-list` 

待匹配: selection-stmt statement-list` } declaration-list` 

selection-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: selection-stmt:if ( expression statement other ;

待匹配: if ( expression statement other statement-list` } declaration-list` 

待匹配: iteration-stmt statement-list` } declaration-list` 

iteration-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: iteration-stmt:while ( expression ) statement ;

待匹配: while ( expression ) statement statement-list` } declaration-list` 

待匹配: return-stmt statement-list` } declaration-list` 

return-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: return-stmt:return return-stmt` ;

待匹配: return return-stmt` statement-list` } declaration-list` 

待匹配: epsilon } declaration-list` 

statement-list`: empty
匹配:}
declaration-list`:
follow:

进入产生式: declaration-list`:declaration declaration-list` ;epsilon ;

待匹配: declaration declaration-list` 

declaration:
follow:
declaration-list` 
进入产生式: declaration:type-specifier ID declaration` ;

待匹配: type-specifier ID declaration` declaration-list` 

type-specifier:
follow:
ID declaration` declaration-list` 
进入产生式: type-specifier:int ;void ;

待匹配: int ID declaration` declaration-list` 

待匹配: void ID declaration` declaration-list` 

待匹配: epsilon 

declaration-list`: empty
匹配产生式: declaration-list` : epsilon 
匹配产生式: statement-list` : epsilon 
匹配产生式: simple-expression` : epsilon 
匹配产生式: additive-expression` : epsilon 
匹配产生式: term` : epsilon 
匹配产生式: arg-list` : epsilon 
匹配产生式: simple-expression` : epsilon 
匹配产生式: additive-expression` : epsilon 
匹配产生式: term` : epsilon 
匹配产生式: expression : NUM term` additive-expression` simple-expression` 
待匹配: ID expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配产生式: arg-list` : , expression arg-list` 
待匹配: epsilon ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

arg-list`: empty
匹配产生式: simple-expression` : epsilon 
匹配产生式: additive-expression` : epsilon 
匹配产生式: term` : epsilon 
匹配产生式: expression : NUM term` additive-expression` simple-expression` 
待匹配: ID expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配产生式: arg-list : expression arg-list` 
匹配产生式: args : arg-list 
待匹配: epsilon ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

args: empty
匹配产生式: expression` : ( args ) term` additive-expression` simple-expression` 
匹配产生式: expression : ID expression` 
匹配产生式: return-stmt` : expression ; 
匹配产生式: return-stmt : return return-stmt` 
匹配产生式: statement : return-stmt 
匹配产生式: statement-list` : statement statement-list` 
待匹配: epsilon } declaration-list` 

statement-list`: empty
匹配产生式: simple-expression` : epsilon 
匹配产生式: additive-expression` : epsilon 
匹配产生式: term` : epsilon 
匹配产生式: arg-list` : epsilon 
匹配产生式: simple-expression` : epsilon 
匹配产生式: additive-expression` : epsilon 
匹配产生式: term` : epsilon 
匹配产生式: expression`` : term` additive-expression` simple-expression` 
待匹配: = expression arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配产生式: var` : epsilon 
匹配产生式: expression` : var` expression`` 
待匹配: ( args ) term` additive-expression` simple-expression` arg-list` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配产生式: expression : ID expression` 
匹配产生式: arg-list : expression arg-list` 
匹配产生式: args : arg-list 
待匹配: epsilon ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

args: empty
匹配产生式: expression` : ( args ) term` additive-expression` simple-expression` 
匹配产生式: expression : ID expression` 
匹配产生式: expression-stmt : expression ; 
待匹配: ; statement-list` } declaration-list` 

匹配产生式: statement : expression-stmt 
待匹配: compound-stmt statement-list` } declaration-list` 

compound-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: compound-stmt:{ local-declarations statement-list } ;

待匹配: { local-declarations statement-list } statement-list` } declaration-list` 

待匹配: selection-stmt statement-list` } declaration-list` 

selection-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: selection-stmt:if ( expression statement other ;

待匹配: if ( expression statement other statement-list` } declaration-list` 

待匹配: iteration-stmt statement-list` } declaration-list` 

iteration-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: iteration-stmt:while ( expression ) statement ;

待匹配: while ( expression ) statement statement-list` } declaration-list` 

待匹配: return-stmt statement-list` } declaration-list` 

return-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: return-stmt:return return-stmt` ;

待匹配: return return-stmt` statement-list` } declaration-list` 

匹配产生式: statement-list` : statement statement-list` 
待匹配: epsilon } declaration-list` 

statement-list`: empty
匹配产生式: simple-expression` : epsilon 
匹配产生式: additive-expression` : epsilon 
匹配产生式: term` : epsilon 
匹配产生式: factor : NUM 
匹配产生式: mulop : / 
匹配产生式: term` : mulop factor term` 
待匹配: epsilon additive-expression` simple-expression` ; statement-list` } declaration-list` 

term`: empty
additive-expression`:
follow:
simple-expression` ; statement-list` } declaration-list` 
进入产生式: additive-expression`:addop term additive-expression` ;epsilon ;

待匹配: addop term additive-expression` simple-expression` ; statement-list` } declaration-list` 

addop:
follow:
term additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: addop:+ ;- ;

待匹配: + term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: - term additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon simple-expression` ; statement-list` } declaration-list` 

additive-expression`: empty
simple-expression`:
follow:
; statement-list` } declaration-list` 
进入产生式: simple-expression`:relop additive-expression ;epsilon ;

待匹配: relop additive-expression ; statement-list` } declaration-list` 

relop:
follow:
additive-expression ; statement-list` } declaration-list` 
进入产生式: relop:<= < > >= == != ;

待匹配: <= < > >= == != additive-expression ; statement-list` } declaration-list` 

待匹配: epsilon ; statement-list` } declaration-list` 

simple-expression`: empty
匹配产生式: simple-expression` : epsilon 
匹配产生式: additive-expression` : epsilon 
匹配产生式: term` : epsilon 
匹配产生式: factor : NUM 
匹配产生式: term : factor term` 
匹配产生式: addop : + 
待匹配: - term additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配产生式: additive-expression` : addop term additive-expression` 
待匹配: epsilon simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

additive-expression`: empty
simple-expression`:
follow:
) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: simple-expression`:relop additive-expression ;epsilon ;

待匹配: relop additive-expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

relop:
follow:
additive-expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 
进入产生式: relop:<= < > >= == != ;

待匹配: <= < > >= == != additive-expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: epsilon ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

simple-expression`: empty
匹配产生式: term` : epsilon 
匹配产生式: expression`` : term` additive-expression` simple-expression` 
待匹配: = expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配产生式: var` : epsilon 
匹配产生式: expression` : var` expression`` 
待匹配: ( args ) term` additive-expression` simple-expression` ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配产生式: expression : ID expression` 
匹配产生式: expression : ( expression ) term` additive-expression` simple-expression` 
待匹配: NUM term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: ID expression` ; statement-list` } declaration-list` 

匹配产生式: expression`` : = expression 
匹配产生式: var` : epsilon 
匹配产生式: expression` : var` expression`` 
待匹配: ( args ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配产生式: expression : ID expression` 
匹配产生式: expression-stmt : expression ; 
待匹配: ; statement-list` } declaration-list` 

匹配产生式: statement : expression-stmt 
待匹配: compound-stmt statement-list` } declaration-list` 

compound-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: compound-stmt:{ local-declarations statement-list } ;

待匹配: { local-declarations statement-list } statement-list` } declaration-list` 

待匹配: selection-stmt statement-list` } declaration-list` 

selection-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: selection-stmt:if ( expression statement other ;

待匹配: if ( expression statement other statement-list` } declaration-list` 

待匹配: iteration-stmt statement-list` } declaration-list` 

iteration-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: iteration-stmt:while ( expression ) statement ;

待匹配: while ( expression ) statement statement-list` } declaration-list` 

待匹配: return-stmt statement-list` } declaration-list` 

return-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: return-stmt:return return-stmt` ;

待匹配: return return-stmt` statement-list` } declaration-list` 

匹配产生式: statement-list` : statement statement-list` 
待匹配: epsilon } declaration-list` 

statement-list`: empty
匹配产生式: simple-expression` : epsilon 
匹配产生式: additive-expression` : epsilon 
匹配产生式: term` : epsilon 
匹配产生式: expression : NUM term` additive-expression` simple-expression` 
待匹配: ID expression` ; statement-list` } declaration-list` 

匹配产生式: expression`` : = expression 
匹配产生式: var` : epsilon 
匹配产生式: expression` : var` expression`` 
待匹配: ( args ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

匹配产生式: expression : ID expression` 
匹配产生式: expression-stmt : expression ; 
待匹配: ; statement-list` } declaration-list` 

匹配产生式: statement : expression-stmt 
待匹配: compound-stmt statement-list` } declaration-list` 

compound-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: compound-stmt:{ local-declarations statement-list } ;

待匹配: { local-declarations statement-list } statement-list` } declaration-list` 

待匹配: selection-stmt statement-list` } declaration-list` 

selection-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: selection-stmt:if ( expression statement other ;

待匹配: if ( expression statement other statement-list` } declaration-list` 

待匹配: iteration-stmt statement-list` } declaration-list` 

iteration-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: iteration-stmt:while ( expression ) statement ;

待匹配: while ( expression ) statement statement-list` } declaration-list` 

待匹配: return-stmt statement-list` } declaration-list` 

return-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: return-stmt:return return-stmt` ;

待匹配: return return-stmt` statement-list` } declaration-list` 

匹配产生式: statement-list` : statement statement-list` 
待匹配: epsilon } declaration-list` 

statement-list`: empty
匹配产生式: statement-list : statement-list` 
匹配产生式: local-declarations` : epsilon 
匹配产生式: var-declaration` : ; 
匹配产生式: type-specifier : int 
待匹配: void ID var-declaration` local-declarations` statement-list } declaration-list` 

匹配产生式: var-declaration : type-specifier ID var-declaration` 
匹配产生式: local-declarations` : var-declaration local-declarations` 
待匹配: epsilon statement-list } declaration-list` 

local-declarations`: empty
statement-list:
follow:
} declaration-list` 
进入产生式: statement-list:statement-list` ;

待匹配: statement-list` } declaration-list` 

statement-list`:
follow:
} declaration-list` 
进入产生式: statement-list`:statement statement-list` ;epsilon ;

待匹配: statement statement-list` } declaration-list` 

statement:
follow:
statement-list` } declaration-list` 
进入产生式: statement:expression-stmt ;compound-stmt ;selection-stmt ;iteration-stmt ;return-stmt ;

待匹配: expression-stmt statement-list` } declaration-list` 

expression-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: expression-stmt:expression ; ;; ;

待匹配: expression ; statement-list` } declaration-list` 

expression:
follow:
; statement-list` } declaration-list` 
进入产生式: expression:( expression ) term` additive-expression` simple-expression` ;NUM term` additive-expression` simple-expression` ;ID expression` ;

待匹配: ( expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: NUM term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: ID expression` ; statement-list` } declaration-list` 

待匹配: ; statement-list` } declaration-list` 

待匹配: compound-stmt statement-list` } declaration-list` 

compound-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: compound-stmt:{ local-declarations statement-list } ;

待匹配: { local-declarations statement-list } statement-list` } declaration-list` 

待匹配: selection-stmt statement-list` } declaration-list` 

selection-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: selection-stmt:if ( expression statement other ;

待匹配: if ( expression statement other statement-list` } declaration-list` 

待匹配: iteration-stmt statement-list` } declaration-list` 

iteration-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: iteration-stmt:while ( expression ) statement ;

待匹配: while ( expression ) statement statement-list` } declaration-list` 

待匹配: return-stmt statement-list` } declaration-list` 

return-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: return-stmt:return return-stmt` ;

待匹配: return return-stmt` statement-list` } declaration-list` 

待匹配: epsilon } declaration-list` 

statement-list`: empty
匹配产生式: var-declaration` : ; 
匹配产生式: type-specifier : int 
待匹配: void ID var-declaration` local-declarations` statement-list } declaration-list` 

匹配产生式: var-declaration : type-specifier ID var-declaration` 
匹配产生式: local-declarations` : var-declaration local-declarations` 
待匹配: epsilon statement-list } declaration-list` 

local-declarations`: empty
statement-list:
follow:
} declaration-list` 
进入产生式: statement-list:statement-list` ;

待匹配: statement-list` } declaration-list` 

statement-list`:
follow:
} declaration-list` 
进入产生式: statement-list`:statement statement-list` ;epsilon ;

待匹配: statement statement-list` } declaration-list` 

statement:
follow:
statement-list` } declaration-list` 
进入产生式: statement:expression-stmt ;compound-stmt ;selection-stmt ;iteration-stmt ;return-stmt ;

待匹配: expression-stmt statement-list` } declaration-list` 

expression-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: expression-stmt:expression ; ;; ;

待匹配: expression ; statement-list` } declaration-list` 

expression:
follow:
; statement-list` } declaration-list` 
进入产生式: expression:( expression ) term` additive-expression` simple-expression` ;NUM term` additive-expression` simple-expression` ;ID expression` ;

待匹配: ( expression ) term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: NUM term` additive-expression` simple-expression` ; statement-list` } declaration-list` 

待匹配: ID expression` ; statement-list` } declaration-list` 

待匹配: ; statement-list` } declaration-list` 

待匹配: compound-stmt statement-list` } declaration-list` 

compound-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: compound-stmt:{ local-declarations statement-list } ;

待匹配: { local-declarations statement-list } statement-list` } declaration-list` 

待匹配: selection-stmt statement-list` } declaration-list` 

selection-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: selection-stmt:if ( expression statement other ;

待匹配: if ( expression statement other statement-list` } declaration-list` 

待匹配: iteration-stmt statement-list` } declaration-list` 

iteration-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: iteration-stmt:while ( expression ) statement ;

待匹配: while ( expression ) statement statement-list` } declaration-list` 

待匹配: return-stmt statement-list` } declaration-list` 

return-stmt:
follow:
statement-list` } declaration-list` 
进入产生式: return-stmt:return return-stmt` ;

待匹配: return return-stmt` statement-list` } declaration-list` 

待匹配: epsilon } declaration-list` 

statement-list`: empty
匹配产生式: local-declarations : local-declarations` 
匹配产生式: compound-stmt : { local-declarations statement-list } 
匹配产生式: parma-list` : epsilon 
匹配产生式: parma` : epsilon 
匹配产生式: parmas : int ID parma` parma-list` 
待匹配: void parmas` ) compound-stmt declaration-list` 

匹配产生式: declaration` : ( parmas ) compound-stmt 
匹配产生式: type-specifier : int 
待匹配: void ID declaration` declaration-list` 

匹配产生式: declaration : type-specifier ID declaration` 
匹配产生式: declaration-list : declaration declaration-list` 
匹配产生式: program : declaration-list 
res.first: 1
program-----------------declaration-list--------declaration-------------type-specifier----------int
|                       |                       |-----------------------ID
|                       |                       |-----------------------declaration`------------(
|                       |                       |                       |-----------------------parmas------------------int
|                       |                       |                       |                       |-----------------------ID
|                       |                       |                       |                       |-----------------------parma`------------------epsilon
|                       |                       |                       |                       |-----------------------parma-list`-------------epsilon
|                       |                       |                       |-----------------------)
|                       |                       |                       |-----------------------compound-stmt-----------{
|                       |                       |                       |                       |-----------------------local-declarations------local-declarations`-----var-declaration---------type-specifier----------int
|                       |                       |                       |                       |                       |                       |                       |-----------------------ID
|                       |                       |                       |                       |                       |                       |                       |-----------------------var-declaration`--------;
|                       |                       |                       |                       |                       |                       |-----------------------local-declarations`-----var-declaration---------type-specifier----------int
|                       |                       |                       |                       |                       |                       |                       |                       |-----------------------ID
|                       |                       |                       |                       |                       |                       |                       |                       |-----------------------var-declaration`--------;
|                       |                       |                       |                       |                       |                       |                       |-----------------------local-declarations`-----epsilon
|                       |                       |                       |                       |-----------------------statement-list----------statement-list`---------statement---------------expression-stmt---------expression--------------ID
|                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------expression`-------------var`--------------------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------expression``------------=
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------expression--------------NUM
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------term`-------------------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------additive-expression`----epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------simple-expression`------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |-----------------------;
|                       |                       |                       |                       |                       |                       |-----------------------statement-list`---------statement---------------expression-stmt---------expression--------------ID
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------expression`-------------var`--------------------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------expression``------------=
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------expression--------------(
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------expression--------------ID
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------expression`-------------var`--------------------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------expression``------------term`-------------------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------additive-expression`----addop-------------------+
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------term--------------------factor------------------NUM
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------term`-------------------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------additive-expression`----epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------simple-expression`------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------)
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------term`-------------------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------additive-expression`----addop-------------------+
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------term--------------------factor------------------NUM
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------term`-------------------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------additive-expression`----epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------simple-expression`------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------;
|                       |                       |                       |                       |                       |                       |                       |-----------------------statement-list`---------statement---------------expression-stmt---------expression--------------ID
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------expression`-------------(
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------args--------------------arg-list----------------expression--------------ID
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------expression`-------------var`--------------------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------expression``------------term`-------------------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------additive-expression`----epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------simple-expression`------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------arg-list`---------------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------)
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------term`-------------------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------additive-expression`----epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------simple-expression`------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------;
|                       |                       |                       |                       |                       |                       |                       |                       |-----------------------statement-list`---------statement---------------return-stmt-------------return
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------return-stmt`------------expression--------------ID
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------expression`-------------(
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------args--------------------arg-list----------------expression--------------NUM
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------term`-------------------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------additive-expression`----epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------simple-expression`------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------arg-list`---------------,
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------expression--------------NUM
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------term`-------------------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------additive-expression`----epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------simple-expression`------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------arg-list`---------------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------)
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------term`-------------------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------additive-expression`----epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------simple-expression`------epsilon
|                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------;
|                       |                       |                       |                       |                       |                       |                       |                       |                       |-----------------------statement-list`---------epsilon
|                       |                       |                       |                       |-----------------------}
|                       |-----------------------declaration-list`-------epsilon
